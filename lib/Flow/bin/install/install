#!/usr/bin/perl -w

=pod

=head2	APPLICATION install

=head2	PURPOSE

 1. CREATE THE upstart INSTALL FILES FOR A SERVICE
 2. INSTALL THE SERVICE 
 3. START THE SERVICE

=head2	USAGE



=cut
use MooseX::Declare;


class Object with Logger {

use FindBin qw($Bin);

method install ($service) {
	$self->logDebug("service", $service);
	$self->logDebug("Bin", $Bin);

	my $uppercase = uc($service);
	my $lowercase = lc($service);
	my $cowcase = uc(substr($service, 0, 1)) . substr($service, 1);
	$self->logDebug("cowcase", $cowcase);
	$self->logDebug("uppercase", $uppercase);
	$self->logDebug("lowercase", $lowercase);

	#### 1. COPY FILES TO /etc
	# cd /a/bin/install/resources/agua/install
	# sudo cp etc/init.d/template  /etc/init.d/template
	# sudo cp etc/init/template.conf /etc/init/template
	# sudo cp etc/default/template /etc/default/template

	my $filepaths = [ 
		{
			source => "$Bin/etc/init.d/template",
			target => "/etc/init.d/$lowercase"
		},
		{
			source	=>	"$Bin/etc/init/template.conf",			
			target => "/etc/init/$lowercase.conf"
		},
		{
			source	=>	"$Bin/etc/default/template",			
			target => "/etc/default/$lowercase"
		}
	];

	foreach my $hash ( @$filepaths ) {
		my $source = $hash->{source};
		my $target = $hash->{target};
		$self->logDebug("source", $source);
		$self->logDebug("target", $target);

		my $command = "sudo cp $source $target";
		$self->logDebug("command", $command);
		print `$command`;

		$self->substituteName($target, $cowcase, $uppercase, $lowercase);
	}

	#### 2. COPY EXCUTEABLE TO /usr/bin
	# cp /a/bin/daemon/template /a/bin/daemon/$LOWERCASE
	# perl -pi -e 's/template/$LOWERCASE/g' /a/bin/daemon/$LOWERCASE
	# perl -pi -e 's/TEMPLATE/$UPPERCASE/g' /a/bin/daemon/$LOWERCASE
	# perl -pi -e 's/Template/$SERVICE/g' /a/bin/daemon/$LOWERCASE
	# ln -s /a/bin/daemon/$LOWERCASE /usr/bin/$LOWERCASE

	my $executable = "/a/bin/daemon/$lowercase";
	if ( not -f $executable ) {
		my $command = "cp $Bin/usr/bin/template $executable";
		$self->logDebug("command", $command);
		print `$command`;		
	
		$self->substituteName($executable, $cowcase, $uppercase, $lowercase);
	}

	my $command = "ln -s $executable /usr/bin/$lowercase";
	$self->logDebug("command", $command);
	print `$command`;

	#### 3. RUN SERVICE
	# service $LOWERCASE start
	$command = "service $lowercase start";
	$self->logDebug("command", $command);
	print `$command`;
}

method substituteName ($filename, $cowcase, $uppercase, $lowercase) {
	print "Substituting in file: $filename\n";
	my $commands = [
		"perl -pi -e 's/Template/$cowcase/g' $filename",
		"perl -pi -e 's/template/$lowercase/g' $filename",
		"perl -pi -e 's/TEMPLATE/$uppercase/g' $filename",
	];
	foreach my $command ( @$commands ) {
		$self->logDebug("command", $command);
		print `$command`;
	}
}


}


#### USAGE
use Getopt::Long;
my @arguments = @ARGV;
my $service = shift @arguments;
# usage() if not @arguments;

#### VARIABLES
my $log     	=   2;
my $printlog    =   4;
my $installdir 	=	$ENV{'installdir'} || "/a";
my $logfile	    =	"$installdir/log/template.log";
my $help;

GetOptions (
    'service=s'     => \$service,
    'log=i'         => \$log,
    'printlog=i'    => \$printlog,
    'logfile=i'     => \$logfile,
    'help'          => \$help
) or die "No options specified. Try '--help'\n";
usage() if defined $help;

print "Service not defined. Exiting\n" and exit if not defined $service;

my $object = Object->new({
    log			=>	$log,
    printlog	=>	$printlog,
    logfile     =>  $logfile
});

$object->install($service);

exit 0;

##############################################################

sub usage {
	print `perldoc $0`;
	exit;
}


# # 1. COPY FILES TO /etc

# cd /a/bin/install/resources/agua/install
# sudo cp etc/init.d/template  /etc/init.d/template
# sudo cp etc/init/template.conf /etc/init/template
# sudo cp etc/default/template /etc/default/template

# perl -pi -e 's/template/$LOWERCASE/g' /etc/init.d/template
# perl -pi -e 's/TEMPLATE/$UPPERCASE/g' /etc/init.d/template
# perl -pi -e 's/tem/$SERVICE/g' /etc/init.d/template
# perl -pi -e 's/template/$LOWERCASE/g' /etc/init/template
# perl -pi -e 's/TEMPLATE/$UPPERCASE/g' /etc/init/template
# perl -pi -e 's/Template/$SERVICE/g' /etc/init/template
# perl -pi -e 's/template/$LOWERCASE/g' /etc/default/template
# perl -pi -e 's/TEMPLATE/$UPPERCASE/g' /etc/default/template
# perl -pi -e 's/Template/$SERVICE/g' /etc/default/template


# # 2. COPY EXCUTEABLE TO /usr/bin

# cp /a/bin/daemon/template /a/bin/daemon/$LOWERCASE
# perl -pi -e 's/template/$LOWERCASE/g' /a/bin/daemon/$LOWERCASE
# perl -pi -e 's/TEMPLATE/$UPPERCASE/g' /a/bin/daemon/$LOWERCASE
# perl -pi -e 's/Template/$SERVICE/g' /a/bin/daemon/$LOWERCASE

# ln -s /a/bin/daemon/$LOWERCASE /usr/bin/$LOWERCASE


# # 3. RUN SERVICE

# service $LOWERCASE start

