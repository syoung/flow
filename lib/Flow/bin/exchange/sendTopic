#!/usr/bin/env perl

=head2

APPLICATION 	sendTopic

PURPOSE

	Send messages to a RabbitMQ topic queue
	
HISTORY

	v0.01	Basic options to authenticate user and specify queue name

USAGE

$0 [--user String] [--host String] [--password String] [--vhost String] [--queue String]

EXAMPLE

# Send message to default queue and key

./sendTopic --message '{"mode":"test"}'

=cut

#### EXTERNAL MODULES
use Term::ANSIColor qw(:constants);
use Getopt::Long;
use FindBin qw($Bin);
use AnyEvent;
use Net::RabbitFoot;
use JSON;

#### INTERNAL MODULES
use Conf::Yaml;
# use Exchange;

#### SET CONF FILE
my $installdir  =   $ENV{'FLOW_HOME'};
if ( not defined $installdir ) {
  print "Can't find FLOW_HOME environment variable. Exiting\n";
  exit;
}

my $configfile  =   "$installdir/conf/config.yml";
my $conf = Conf::Yaml->new(
    memory      =>  1,
    inputfile   =>  $configfile,
);

my $message		=	"";
my $host		=	$conf->getKey( "mq:host" ) || "localhost";
my $port		=	$conf->getKey( "mq:port" ) || 5672; 
my $user		=	$conf->getKey( "mq:user" ) || "guest";
my $pass		=	$conf->getKey( "mq:pass" ) || "guest";
my $vhost		=	$conf->getKey( "mq:vhost" ) || "/";
my $keys		=	$conf->getKey( "mq:topickeys" ) || "test.exchange.topic";
my $exchange	=	$conf->getKey( "mq:topicexchange" ) || "test.exchange";

my $log			=	2;
my $printlog	=	2;
my $help;

GetOptions (
    'exchange=s'	=> \$exchange,
    'message=s'		=> \$message,
    'keys=s'		=> \$keys,        # routing keys

    'host=s'		=> \$host,
    'port=s'		=> \$port,
    'user=s'		=> \$user,
    'pass=s'		=> \$pass,
    'vhost=s'		=> \$vhost,

    'log=i'     	=> \$log,
    'printlog=i'    => \$printlog,
    'help'          => \$help

) or die "No options specified. Try '--help'\n";
usage() if defined $help;


my $jsonparser	=	JSON->new();
my $data		=	$jsonparser->decode($message);
my $key			=	$data->{queue};
print "key: $key\n";
print "Exiting. No queue defined in message: $message\n" and exit if not defined $key;

my $conn = Net::RabbitFoot->new()->load_xml_spec()->connect(
    host 	=> 	$host,
    port 	=> 	5672,
    user 	=> 	$user,
    pass 	=> 	$pass,
    vhost 	=> 	$vhost,
);

my $channel = $conn->open_channel();

# $channel->declare_exchange(
#     exchange => $exchange,
#     type => 'topic',
# );

$channel->publish(
    exchange => $exchange,
    routing_key => $key,
    body => $message,
);

print " [x] Sent topic message on host $host exchange $exchange to key $key: $message\n";

$conn->close();


exit 0;

##############################################################

sub usage {
	print `perldoc $0`;
	exit;
}


